name: Deploy Extension

# Only run on push to master when the commit message contains 'Version Packages' (from changesets release PR)
on:
  push:
    branches:
      - master
    # Only run if the commit message contains 'Version Packages'
    # This is a workaround for only running after a release PR merge
    # See: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#using-filters
    # This requires the workflow to be triggered by a commit with a specific message
    # This will run the deploy only if the commit message contains 'Version Packages'
    # (which is the default title for changesets release PRs)
    paths-ignore:
      - "**"
    # The workflow_dispatch event can be used for manual deploys
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build project
        run: yarn build

      - name: Build web extension
        run: yarn web-ext:build

      - name: Get version from package.json
        id: get_version
        run: |
          VERSION=$(node -p 'require("./package.json").version')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Find built zip file
        id: find_zip
        run: |
          ZIP_FILE=$(ls dist/*.zip | head -n 1)
          echo "zip_file=$ZIP_FILE" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Release v${{ steps.get_version.outputs.version }}
          body: |
            Automated release for version ${{ steps.get_version.outputs.version }}.
          draft: false
          prerelease: false

      - name: Upload zip to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_zip.outputs.zip_file }}
          asset_name: headertweaker-${{ steps.get_version.outputs.version }}.zip
          asset_content_type: application/zip
